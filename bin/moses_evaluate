#!/usr/local/plan9/bin/rc

fn moses_dev_test {
	switch($factors){
		case factorless pos pos-gen
			suf = tok
		case *
			suf = lc
	}

	if (9 test ! -s $eval_in_fact)
		moses_process_data $eval_in_stem $src

	if (9 test ! -s $eval_ref_fact)
		moses_process_data $eval_ref_stem $tgt

	if (9 test ! -s $eval_model_dir/moses.ini) {
		echo -n Filering model to fit in memory ...
		filter-model-given-input.pl $eval_model_dir $tuning_dir/moses.weight-reused.ini $eval_in_stem.lc
		echo done.
	}
	
	if (9 test ! -s $eval_output) {
		echo -n Decoding with Moses ...
		moses -config $eval_model_dir/moses.ini -input-file $eval_in_stem.$suf > $eval_out_stem.fact
		moses_fact2tok < $eval_out_stem.fact > $eval_output
		echo done.
	}
}

fn moses_train_recaser {
	train-recaser.perl -train-script /usr/bin/train-factored-phrase-model.perl -ngram-count /usr/bin/ngram-count -corpus $lm_stem.tok -dir $recaser_dir
}

fn moses_recase {
	recase.perl -model $1 -in $2 -moses /usr/bin/moses
}

fn moses_detokenize {
	detokenizer.perl -l $1
}

fn moses_bleu {
	cp -f $1 $1.0
	multi-bleu.perl $1 < $2
}

fn moses_eval {
	if (9 test ! -s $recaser_dir/moses.ini) {
		echo -n Training recaser ...
		moses_train_recaser
		echo done.
	}
	
	if (9 test ! -s $eval_out_stem.rc) {
		echo -n Recasing output ...
		moses_recase $recaser_dir/moses.ini $eval_output > $eval_output.rc
		echo done.
	}
	
	if (9 test ! -s $eval_out_stem.detok) {
		echo -n Detokenizing output ...
		moses_detokenize $tgt < $eval_output.rc > $eval_output.detok
		echo done.
	}

	echo -n Calculating Bleu score ...
	moses_bleu $eval_ref_stem $eval_output.detok > $eval_output.bleu
	echo done.
	cat $eval_output.bleu
}

fn usage {
	echo 'usage: moses_evaluate [-s|--src en|es|ja] [-t|--tgt en|es|ja] [-r|--root <root_dir>] [-c|--corpus <corpus_name>] [-l|--lm-corpus <lm_corpus_file> ] [-f|--factors <factors>]' >[1=2]
}

if (! ~ $#* 0) {
	has_args = true
	factors = factorless
}

while (~ $1 -*) {
	switch($1) {
		case -c --corpus
			corpus = $2
			shift 2
		case -f --factors
			factors = $2
			shift 2
		case -l --lm-corpus
			lm_corpus = $2
			shift 2
		case -r --root
			root = $2
			shift 2
		case -s --src
			src = $2
			shift 2			
		case -t --tgt
			tgt = $2
			shift 2
		case *
			echo malformed flag $1 ! >[1=2]
			usage
			exit 1
	}
}

if (~ $src '' || ~ $tgt '' || ~ $corpus '' || ~ $lm_corpus '' || ~ $factors '' || ~ $root '') {
	echo '$src, $tgt, $corpus, $lm_corpus, $factors, and $root must be set!' >[1=2]
	usage
	exit 1
}
if not {
	if (! ~ $has_args '') . $MHOME/env/moses.env
	moses_dev_test
	moses_eval
}
