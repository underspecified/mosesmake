#!/usr/local/plan9/bin/rc

fn moses_prepare_data {
	if (! 9 test -e $train_clean.$src -a -e $train_clean.$tgt) {
		echo -n Discarding sentences not between $min and $max words in length ...
		moses_filter $train_stem $src $tgt $train_clean $min $max
		mv $train_stem.$src $train_stem.orig.$src && cp $train_clean.$src $train_stem.$src
		mv $train_stem.$tgt $train_stem.orig.$tgt && cp $train_clean.$tgt $train_stem.$tgt
		echo done.
	}

	if (! 9 test -e $train_fact.$src)
			moses_process_data $train_stem $src $src
	if (! 9 test -e $train_fact.$tgt)
			moses_process_data $train_stem $tgt $tgt
}

fn usage {
	echo 'usage: moses_prepare_data [-s|--src en|es|ja] [-t|--tgt en|es|ja] [-r|--root <root_dir>] [-c|--corpus <corpus_name>] [-l|--lm-corpus <lm_corpus_file> ] [-f|--factors <factors>]' >[1=2]
}

if (! ~ $#* 0) {
	has_args = true
	factors = factorless
}

while (~ $1 -*) {
	switch($1) {
		case -c --corpus
			corpus = $2
			shift 2
		case -f --factors
			factors = $2
			shift 2
		case -l --lm-corpus
			lm_corpus = $2
			shift 2
		case -r --root
			root = $2
			shift 2
		case -s --src
			src = $2
			shift 2			
		case -t --tgt
			tgt = $2
			shift 2
		case *
			echo malformed flag $1 ! >[1=2]
			usage
			exit 1
	}
}

if (~ $src '' || ~ $tgt '' || ~ $corpus '' || ~ $lm_corpus '' || ~ $factors '' || ~ $root '') {
	echo '$src, $tgt, $corpus, $lm_corpus, $factors, and $root must be set!' >[1=2]
	usage
	exit 1
}
if not {
	if (! ~ $has_args '') . $MHOME/env/moses.env
	moses_prepare_data
}
