#!/bin/bash

eos_record2line () {
	awk '
	BEGIN {
		RS = "EOS"
		ORS = ""
	}
	{
		for (i=1; i<=NF; i++) {
			printf "%s ", $i
		}
		print "\n"
	}' |
	head -n -1
}

moses_factorize_corpus_ja () {
	tr -d ' ' |
	mecab8 -F'%m|%f[6]|%F-[0,1]|%F-[4,5]___' |
	sed 's/___/ /g
		 s/| /|NULL /g
		 s/EOS$//g'
}

protect_char () {
	sed 's/$1/*$2*/g'
}

restore_char () {
	sed 's/*$1*/$2/g'
}

moses_fact2tok_pos () {
	moses_fact2tok+pos |
#	protect_char '|' 'PIPE' |
	protect_char '_' 'UNDERSCORE' |
	tr '|' '_'
}

moses_tok_pos2morph () {
	morpha -a |
	awk '
	{
		for (i=1; i<=NF; i++) {
			num = split($i, data, "+")
			if (num == 2)
				$i = "+" data[2]
			else
				$i = "NULL"
		}
		print
	}' |
#	restore_char 'PIPE' '|'
	restore_char 'UNDERSCORE' '_'
}

moses_add_morph_en () {
	tee tmp.fact.$$ |
	moses_fact2tok_pos |
	moses_tok_pos2morph > tmp.morph.$$
	paste tmp.fact.$$ tmp.morph.$$ |
	awk '
	BEGIN {
		FS = "\t"
	}
	{
		ilen = split($1, itoks, " ")
		jlen = split($2, jtoks, " ")
		if (ilen != jlen) {
			printf "ERROR: line %s: %d != %d", NR, ilen, jlen
			exit 1
		}
		
		for (i=1; i<=ilen; i++) {
			printf "%s|%s ", itoks[i], jtoks[i]
		}
		print ""
	}'
	rm -f tmp.*.$$
}

moses_factorize_corpus_en () {
	iconv -c -f utf-8 -t iso-8859-15 |
	tag_with_eos tree-tagger-english 2>/dev/null |
	iconv -c -f iso-8859-15 -t utf-8 |
	awk '
	BEGIN {
		FS = "\t"
		OFS = "|"
	}
	NF >= 3 {
		surface = $1
		pos = $2
#		morph = $2
		lemma = $3
#		print surface, lemma, pos, morph
		print surface, lemma, pos
	}
	/^EOS$/' |
	eos_record2line |
	moses_add_morph_en
}

moses_factorize_corpus_it () {
	iconv -c -f utf-8 -t iso-8859-15 |
	tag_with_eos tree-tagger-italian 2>/dev/null |
	iconv -c -f iso-8859-15 -t utf-8 |
	awk '
	BEGIN {
		FS = "\t"
		OFS = "|"
	}
	NF >= 3 {
		surface = $1
		pos = $2
#		morph = $2
		lemma = $3
#		print surface, lemma, pos, morph
		print surface, lemma, pos
	}
	/^EOS$/' |
	eos_record2line
}

moses_factorize_corpus_es () {
	iconv -c -f utf-8 -t iso-8859-15 |
	tag_with_eos tree-tagger-spanish 2>/dev/null |
	iconv -c -f iso-8859-15 -t utf-8 |
	awk '
	BEGIN {
		FS = "\t"
		OFS = "|"
	}
	NF >= 3 {
		surface = $1
		pos = $2
#		morph = $2
		lemma = $3
#		print surface, lemma, pos, morph
		print surface, lemma, pos
	}
	/^EOS$/' |
	eos_record2line
}


moses_factorize_corpus () {
	lang=$1
	case $lang in
		en)
			moses_factorize_corpus_en
		;;
		es)
			moses_factorize_corpus_es
		;;
		it)
			moses_factorize_corpus_it
		;;
		ja)
			moses_factorize_corpus_ja
		;;
	esac
}

case $# in
	1)
		moses_factorize_corpus $1
	;;
	*)
		echo usage: moses_factorize_corpus language 1>&2
		exit 1
	;;
esac
